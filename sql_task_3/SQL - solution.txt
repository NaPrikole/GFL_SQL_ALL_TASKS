Dear master,

Link to http://sql-ex.ru/learn_exercises.php?LN=1
and crids:

Login - NaPrikole,
Password - 07011983.

Best regards Vladimir.

Short database description "Computer firm":

The database scheme consists of four tables:
Product(maker, model, type)
PC(code, model, speed, ram, hd, cd, price)
Laptop(code, model, speed, ram, hd, screen, price)
Printer(code, model, color, type, price)
The Product table contains data on the maker, model number, and type of product ('PC', 'Laptop', or 'Printer').
It is assumed that model numbers in the Product table are unique for all makers and product types. Each personal
computer in the PC table is unambiguously identified by a unique code, and is additionally characterized by its model
(foreign key referring to the Product table), processor speed (in MHz) – speed field, RAM capacity (in Mb) - ram,
hard disk drive capacity (in Gb) – hd, CD-ROM speed (e.g, '4x') - cd, and its price. The Laptop table is similar to the PC table,
except that instead of the CD-ROM speed, it contains the screen size (in inches) – screen. For each printer model in the Printer table,
its output type (‘y’ for color and ‘n’ for monochrome) – color field, printing technology ('Laser', 'Jet', or 'Matrix') – type, and price are specified.

1. Find the model number, speed and hard drive capacity for all the PCs with prices below $500. Result set: model, speed, hd.
1. select model, speed, hd from PC where price < 500;

2. List all printer makers. Result set: maker.
2. select maker from PRODUCT where type = 'Printer' group by maker;

3. Find the model number, RAM and screen size of the laptops with prices over $1000.
3. select model,ram,screen from LAPTOP where price > 1000;

4. Find all records from the Printer table containing data about color printers.
4. select * from PRINTER where color = 'y';

5. Find the model number, speed and hard drive capacity of PCs cheaper than $600 having a 12x or a 24x CD drive.
5. select model, speed, hd from PC where ( cd = '12x' or cd = '24x' ) and price < 600;

6. For each maker producing laptops with a hard drive capacity of 10 Gb or higher, find the speed of such laptops. Result set: maker, speed.
6. select distinct p.maker, l.speed from LAPTOP l join PRODUCT p on p.model = l.model where l.hd >= 10;

7. Get the models and prices for all commercially available products (of any type) produced by maker B.
7. select distinct product.model, pc.price from PRODUCT join PC on product.model = pc.model where maker = 'B' 
   union
   select distinct product.model, laptop.price from PRODUCT join LAPTOP on product.model=laptop.model where maker='B' 
   union 
   select distinct product.model, printer.price from PRODUCT join PRINTER on product.model=printer.model where maker='B'

8. Find the makers producing PCs but not laptops.
8. select distinct maker from PRODUCT where type = 'pc' except select distinct product.maker from PRODUCT where type = 'laptop';

9. Find the makers of PCs with a processor speed of 450 MHz or more. Result set: maker.
9. select distinct product.maker from PC inner join PRODUCT on pc.model = product.model where pc.speed >= 450;

10. Find the printer models having the highest price. Result set: model, price.
10. select model, price from PRINTER where price = (select max(price) from PRINTER);

11. Find out the average speed of PCs.
11. select avg(speed) from PC;

12. Find out the average speed of the laptops priced over $1000.
12. select avg(speed) from LAPTOP where price > 1000;

13. Find out the average speed of the PCs produced by maker A.
13. select avg(pc.speed) from PC, PRODUCT where pc.model = product.model and product.maker = 'A';

14. Get the makers who produce only one product type and more than one model. Output: maker, type.
14. select maker, max(type) from PRODUCT group by MAKER having count(distinct type) = 1 and count(model) > 1;

15. Get hard drive capacities that are identical for two or more PCs. Result set: hd.
15. select hd from PC group by (hd) having count(model) >= 2;

16. Get the laptop models that have a speed smaller than the speed of any PC. Result set: type, model, speed.
16. select distinct p.type, p.model, l.speed from LAPTOP l join PRODUCT p on l.model = p.model where l.speed < (select min(speed) from PC);

17. Get the laptop models that have a speed smaller than the speed of any PC. Result set: type, model, speed.
17. select distinct p.type, p.model, l.speed from LAPTOP l join PRODUCT p on l.model = p.model where l.speed < (select min(speed) from PC)

18. Find the makers of the cheapest color printers. Result set: maker, price.
18. select distinct product.maker, printer.price from PRODUCT, PRINTER
    where product.model = printer.model and printer.color = 'y' and printer.price = (select min(price) from PRINTER where printer.color = 'y');

19. For each maker having models in the Laptop table, find out the average screen size of the laptops he produces. Result set: maker, average screen size.
19. select product.maker, avg(screen) from LAPTOP left join PRODUCT on product.model = laptop.model group by product.maker

20. Find the makers producing at least three distinct models of PCs. Result set: maker, number of PC models.
20. select maker, count(model) from PRODUCT where type = 'pc' group by product.maker having count (distinct model) >= 3

21. Find out the maximum PC price for each maker having models in the PC table. Result set: maker, maximum price.
21. select product.maker, max(pc.price) from PRODUCT, PC where product.model = pc.model group by product.maker

22. For each value of PC speed that exceeds 600 MHz, find out the average price of PCs with identical speeds. Result set: speed, average price.
22. select pc.speed, avg(pc.price) from PC where pc.speed > 600 group by pc.speed

23. Get the makers producing both PCs having a speed of 750 MHz or higher and laptops with a speed of 750 MHz or higher. Result set: maker
23. select distinct maker from PRODUCT t1 join pc t2 on t1.model=t2.model where speed>=750 and maker in 
	( select maker from PRODUCT t1 join laptop t2 on t1.model=t2.model where speed >= 750 )

24. List the models of any type having the highest price of all products present in the database.
24. select model from (select model, price from PC 
    union 
    select model, price from LAPTOP 
    union 
    select model, price from PRINTER ) t1 where price = (select max(price) from (select price from PC union select price from LAPTOP union select price from PRINTER ) t2 )

25. Find the printer makers also producing PCs with the lowest RAM capacity and the highest processor speed of all PCs having the lowest RAM capacity. Result set: maker.
25. select distinct maker from PRODUCT 
    where model in (select model from PC where ram = ( select min(ram) from PC ) 
    and speed = ( select max(speed) from PC where ram = ( select min(ram) from PC ))) 
    and maker in ( select maker from PRODUCT where type = 'printer' )

26. Find out the average price of PCs and laptops produced by maker A. Result set: one overall average price for all items.
26. select avg(price) as avg_price from (select price from PRODUCT p join PC on p.model = PC.model where maker = 'A' union all select price from PRODUCT p join LAPTOP on p.model = Laptop.model where maker = 'A') query

27. Find out the average hard disk drive capacity of PCs produced by makers who also manufacture printers. Result set: maker, average HDD capacity.
27. select product.maker, avg(pc.hd) from PC, product where product.model = pc.model 
    and product.maker in ( select distinct maker from PRODUCT where product.type ='printer') group by maker

28. Using Product table, find out the number of makers who produce only one model.
28. select count (maker) as result from ( select maker from PRODUCT group by maker having count(distinct model) <= 1) t1


Short database description "Recycling firm":

The firm owns several buy-back centers for collection of recyclable materials. Each of them receives funds to be paid to the recyclables suppliers. Data on funds received is recorded in the table 
Income_o(point, date, inc)
The primary key is (point, date), where point holds the identifier of the buy-back center, and date corresponds to the calendar date the funds were received. The date column doesn’t include the time part, thus, money (inc) arrives no more than once a day for each center. Information on payments to the recyclables suppliers is held in the table
Outcome_o(point, date, out)
In this table, the primary key (point, date) ensures each buy-back center reports about payments (out) no more than once a day, too. 
For the case income and expenditure may occur more than once a day, another database schema with tables having a primary key consisting of the single column code is used:
Income(code, point, date, inc)
Outcome(code, point, date, out)
Here, the date column doesn’t include the time part, either.

29. Under the assumption that receipts of money (inc) and payouts (out) are registered not more than once a day for each collection point [i.e. the primary key consists of (point, date)], write a query displaying cash flow data (point, date, income, expense). 
    Use Income_o and Outcome_o tables.
29. select t1.point, t1.date, inc, out from INCOME_O t1 left join OUTCOME_O t2 on t1.point = t2.point and t1.date = t2.date union select t2.point, t2.date, inc, out from INCOME_O t1 right join OUTCOME_O t2 ON t1.point = t2.point and t1.date = t2.date

30. Under the assumption that receipts of money (inc) and payouts (out) can be registered any number of times a day for each collection point [i.e. the code column is the primary key], display a table with one corresponding row for each operating date of each collection point.
    Result set: point, date, total payout per day (out), total money intake per day (inc). 
    Missing values are considered to be NULL.
30. select point, date, sum(sum_out), sum(sum_inc) from( select point, date, sum(inc) as sum_inc, null as sum_out from INCOME group by point, date union select point, date, null as sum_inc, sum(out)
    as sum_out from OUTCOME group by point, date ) as t group by point, date order by point

to be continue...


















